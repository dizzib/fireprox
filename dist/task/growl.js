// Generated by LiveScript 1.2.0
(function(){
  var Chalk, Gntp, Util, APP, INFO, ERROR, SUCCESS, enabled, growlAt, client, ref$;
  Chalk = require('chalk');
  Gntp = require('gntp');
  Util = require('util');
  APP = 'fireprox';
  INFO = createNote('info', Chalk.stripColor);
  ERROR = createNote('error', Chalk.red);
  SUCCESS = createNote('success', Chalk.green);
  module.exports = {
    alert: function(e, opts){
      return send(ERROR, e, import$({
        sticky: true
      }, opts));
    },
    err: function(e, opts){
      return send(ERROR, e, opts);
    },
    ok: function(text, opts){
      return send(SUCCESS, text, opts);
    },
    say: function(text, opts){
      return send(INFO, text, opts);
    }
  };
  if (enabled = (growlAt = process.env.growlAt) != null) {
    log("growl at " + growlAt);
    client = (ref$ = new Gntp.Client(), ref$.host = growlAt, ref$);
    register();
  } else {
    log("growl disabled");
  }
  function createNote(name, chalk){
    var ref$;
    return ref$ = new Gntp.Notification(), ref$.name = name, ref$.displayName = APP + " " + name, ref$.chalk = chalk, ref$;
  }
  function register(){
    var req, i$, ref$, len$, note;
    req = new Gntp.Application(APP).toRequest();
    for (i$ = 0, len$ = (ref$ = [INFO, ERROR, SUCCESS]).length; i$ < len$; ++i$) {
      note = ref$[i$];
      req.addNotification(note);
    }
    return client.sendMessage(req.toRequest());
  }
  function send(note, text, opts){
    var req;
    opts == null && (opts = {});
    if (text instanceof Error) {
      text = text.message;
    }
    if (!opts.nolog) {
      Util.log(note.chalk(text));
    }
    if (!enabled) {
      return;
    }
    req = import$(import$(note.toRequest(), {
      applicationName: APP,
      text: text
    }), opts);
    return client.sendMessage(req.toRequest());
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
